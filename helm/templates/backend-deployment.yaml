apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coop-questionari.fullname" . }}-backend
  labels:
    {{- include "coop-questionari.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "coop-questionari.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "coop-questionari.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "coop-questionari.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.backend.repository }}:{{ .Values.image.backend.tag }}"
          imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.env.PORT }}
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: NODE_ENV
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_PORT
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_NAME
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-db-secret
                  key: database-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-db-secret
                  key: jwt-secret
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: PORT
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources.backend | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.backend.migrations.enabled }}
      initContainers:
        - name: migrations
          image: "{{ .Values.backend.migrations.image.repository }}:{{ .Values.backend.migrations.image.tag }}"
          imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready -h $DATABASE_HOST -p $DATABASE_PORT -U $DATABASE_USER; do
                echo "PostgreSQL is unavailable - sleeping"
                sleep 2
              done
              echo "PostgreSQL is up - executing migrations"
              npm run migration:run
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: NODE_ENV
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_PORT
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_NAME
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-config
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "coop-questionari.fullname" . }}-db-secret
                  key: database-password
          resources:
            {{- toYaml .Values.backend.migrations.resources | nindent 12 }}
      {{- end }}
