# Default values for coop-questionari
# This is a YAML-formatted file.

replicaCount: 1

image:
  frontend:
    repository: ghcr.io/kalik1/coop-questionari-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  backend:
    repository: ghcr.io/kalik1/coop-questionari-backend
    tag: "latest"
    pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  frontend:
    port: 80
    targetPort: 8080
  backend:
    port: 3000
    targetPort: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  frontend:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  backend:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: ""  # Will be auto-generated if empty
    database: "coop_questionari"
    username: "coop_user"
    password: ""  # Will be auto-generated if empty
  primary:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

# Backend configuration
backend:
  env:
    NODE_ENV: "production"
    DATABASE_HOST: "{{ .Release.Name }}-postgresql"
    DATABASE_PORT: "5432"
    DATABASE_NAME: "coop_questionari"
    DATABASE_USER: "coop_user"
    DATABASE_PASSWORD: ""  # Will be auto-generated
    JWT_SECRET: ""  # Will be auto-generated
    PORT: "3000"
  
  migrations:
    enabled: true
    image:
      repository: ghcr.io/kalik1/coop-questionari-backend
      tag: "latest"
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# Frontend configuration
frontend:
  env:
    NODE_ENV: "production"
    API_URL: "http://{{ .Release.Name }}-backend:3000"
